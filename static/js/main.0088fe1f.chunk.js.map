{"version":3,"sources":["App.tsx","ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","map","item","goodsFromServer","App","state","sortType","NONE","isReversed","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","this","reorderedGoods","visibleGoods","sort","prev","curr","localeCompare","length","getReorderedGoods","noneSorted","className","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCbQC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC1C,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDHjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMM,EAAb,4MACWC,MAAwB,CAC/BC,SAAUR,EAASS,KACnBC,YAAY,GAHhB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEJ,SAAUR,EAASa,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEJ,SAAUR,EAASe,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAACL,GAAD,MAAY,CACxBG,YAAaH,EAAMG,gBAhBzB,EAoBEO,MAAQ,WACN,EAAKL,SAAS,CACZJ,SAAUR,EAASS,KACnBC,YAAY,KAvBlB,4CA2BE,WACE,MAAiCQ,KAAKX,MAA9BG,EAAR,EAAQA,WAAYF,EAApB,EAAoBA,SACdW,EArDH,SACLjB,EADK,GAGJ,IADCM,EACF,EADEA,SAAUE,EACZ,EADYA,WAENU,EAAY,YAAOlB,GAiBzB,OAfAkB,EAAaC,MAAK,SAACC,EAAMC,GACvB,OAAQf,GACN,KAAKR,EAASa,SACZ,OAAOS,EAAKE,cAAcD,GAC5B,KAAKvB,EAASe,OACZ,OAAOO,EAAKG,OAASF,EAAKE,OAC5B,QACE,OAAO,MAITf,GACFU,EAAaJ,UAGRI,EAgCkBM,CAAkBrB,EAAiBa,KAAKX,OACzDoB,EAAanB,IAAaR,EAASS,KAEzC,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,IAAaR,EAASa,WAEtCkB,QAASb,KAAKP,eANhB,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYtB,IAAaR,EAASe,SAEtCgB,QAASb,KAAKJ,aANhB,4BAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAsC,IAA1BZ,KAAKX,MAAMG,aAE3BqB,QAASb,KAAKF,QANhB,sBAWEW,GAAcjB,IAEZ,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,MAHhB,sBAUN,cAAC,EAAD,CAAaf,MAAOiB,WAhF5B,GAAyBa,IAAMC,WEnD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0088fe1f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { ListOfGoods } from './ListOfGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prev, curr) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prev.localeCompare(curr);\n      case SortType.LENGTH:\n        return prev.length - curr.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  readonly state: ReorderOptions = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n    const noneSorted = sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': this.state.isReversed === false },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(noneSorted || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ListOfGoods goods={reorderedGoods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const ListOfGoods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(item => (\n      <li data-cy=\"Good\" key={item}>\n        {item}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}